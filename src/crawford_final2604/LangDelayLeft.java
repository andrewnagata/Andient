/*
 * Created on Dec 2, 2004
 *
 * TODO To change the template for this generated file go to
 * Window - Preferences - Java - Code Style - Code Templates
 */
package crawford_final2604;
import com.softsynth.jsyn.*;
/**************
** WARNING - this code automatically generated by Wire.
** The real source is probably a Wire patch.
** Do NOT edit this file unless you copy it to another directory and change the name.
** Otherwise it is likely to get clobbered the next time you
** export Java source code from Wire.
**
** Wire is available from: http://www.softsynth.com/wire/
*/
public class LangDelayLeft extends SynthNote
{
    // Declare units and ports.
    public SynthInput input;
    DelayUnit delay;
    DelayUnit delay2;
    MultiplyAddUnit multAdd2;
    MultiplyUnit mult2;
    public SynthInput feedback;
    ExponentialLag expLag;

    public LangDelayLeft()
    {
        this( Synth.getSharedContext() );
    }
    public LangDelayLeft( SynthContext synthContext )
    {
        super( synthContext );
        // Create unit generators.
        add( delay = new DelayUnit(synthContext, 0.4912312 ) );
        add( delay2 = new DelayUnit(synthContext, 0.7234234 ) );
        add( multAdd2 = new MultiplyAddUnit(synthContext) );
        add( mult2 = new MultiplyUnit(synthContext) );
        add( expLag = new ExponentialLag(synthContext) );
        // Connect units and ports.

        addPort( input = multAdd2.inputC, "input" );
        input.setup( 0.0, -0.0015259254723787308, 1.0 );
        delay.output.connect( mult2.inputA);
        delay2.output.connect( multAdd2.inputA);
        multAdd2.output.connect( delay.input);
        mult2.output.connect( delay2.input);

        addPort( feedback = expLag.input, "feedback" );
        feedback.setup( 0.0, 0.7, 0.99 );
        expLag.halfLife.set( 0, 1.5 );
        expLag.current.set( 0, 0.7 );
        expLag.output.connect( multAdd2.inputB);
        expLag.output.connect( mult2.inputB);
        addPort( output = delay2.output, "output" );
    }
    
    public void setStage( int time, int stage )
    {
        switch( stage )
        {
        case 0:
            start( time );
            break;
        case 1:
            break;
        default:
            break;
        }
    }
}
